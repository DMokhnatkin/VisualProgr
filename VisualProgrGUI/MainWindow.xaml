<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vv="clr-namespace:VisualProgrGUI.View"
        xmlns:vm="clr-namespace:VisualProgrGUI.ViewModel"
        xmlns:behavior="clr-namespace:VisualProgrGUI.behavior" xmlns:Panes="clr-namespace:VisualProgrGUI.View.Panes"
        xmlns:vvp="clr-namespace:VisualProgrGUI.View.Panes"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:vm_nodeTypes="clr-namespace:VisualProgrGUI.ViewModel.NodeTypes"
        xmlns:SchemeControl="clr-namespace:SchemeControlLib;assembly=SchemeControlLib" xmlns:local="clr-namespace:VisualProgrGUI" x:Class="VisualProgrGUI.MainWindow"
        xmlns:conv="clr-namespace:VisualProgrGUI.ViewModel.Converters"    
        Title="MainWindow" Height="599.8" Width="691.117">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/styles/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <Grid Background="#FF3A3A3A">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="364*"/>
            <RowDefinition Height="167*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="157"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="154"/>
        </Grid.ColumnDefinitions>
        <vvp:Pane x:Name="NodeTypes" Label="{DynamicResource node_types}" Margin="5,0" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" DataContext="{Binding NodeTypes}" Style="{DynamicResource Pane_Dark}" Grid.Row="1" Grid.RowSpan="2">
            <vvp:Pane.Contains>
                <TreeView Background="{x:Null}" Grid.Row="1" BorderThickness="0" ClipToBounds="True" ItemsSource="{Binding Elements}" BorderBrush="{x:Null}">
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type vm_nodeTypes:TypeGroupViewModel}" ItemsSource="{Binding Childs}">
                            <TextBlock HorizontalAlignment="Stretch" Text="{Binding Name}" Foreground="White"/>
                        </HierarchicalDataTemplate>
                        <DataTemplate DataType="{x:Type vm_nodeTypes:TypeViewModel}" >
                            <TextBlock Text="{Binding Name}" Foreground="White">
								<i:Interaction.Behaviors>
									<behavior:FrameworkElementDragBehavior/>
								</i:Interaction.Behaviors>
                            </TextBlock>
                        </DataTemplate>
                    </TreeView.Resources>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding SelectedNodeTypeChangedCommand}" CommandParameter="{Binding SelectedItem.NodeType, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TreeView>
            </vvp:Pane.Contains>
        </vvp:Pane>

        <Grid Grid.Row="1" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="22*"/>
                <RowDefinition Height="27*"/>
            </Grid.RowDefinitions>
            <!--Nodes-->
            <vvp:Pane x:Name="Nodes" Margin="5,0" Style="{DynamicResource Pane_Dark}" Label="{DynamicResource nodes}" DataContext="{Binding WorkArea.Nodes}" Grid.Row="1">
                <vvp:Pane.Contains>
                    <ListBox Margin="0" Grid.Row="1" ItemsSource="{Binding}" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0" SelectedItem="{Binding SelectedItem, Mode=TwoWay, Source={x:Reference Scheme}}" IsEnabled="True">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" Foreground="White"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </vvp:Pane.Contains>
            </vvp:Pane>

            <!--Preview-->
            <vvp:Pane Label="{DynamicResource preview}" Style="{DynamicResource Pane_Dark}" Margin="5,0,5,5">
                <vvp:Pane.Resources>
                    <ResourceDictionary>
                        <DataTemplate DataType="{x:Type vm:NodeViewModel}">
                            <StackPanel Orientation="Vertical">
                                <Label Content="{Binding Name}" HorizontalAlignment="Stretch" Foreground="#FF87B1C5"/>
                                <TextBlock Visibility="{Binding IsUpToDate, Converter={StaticResource BoolToVisInverted}}" Foreground="#FFF90000" Text="Calculate scene to see values"></TextBlock>
                                <ItemsControl Visibility="{Binding IsUpToDate, Converter={StaticResource BoolToVis}}" ItemsSource="{Binding OutputPorts}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Vertical"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type vm:OutputPortViewModel}">
                                            <vvp:Pane Label="{Binding PortName}" Style="{DynamicResource Pane_Gray}" Margin="2">
                                                <vvp:Pane.Resources>
                                                    <ResourceDictionary>
                                                        <ResourceDictionary.MergedDictionaries>
                                                            <ResourceDictionary Source="Resources/styles/ValTypesRead.xaml"/>
                                                        </ResourceDictionary.MergedDictionaries>
                                                    </ResourceDictionary>
                                                </vvp:Pane.Resources>
                                                <vvp:Pane.Contains>
                                                    <ContentControl Content="{Binding Val, PresentationTraceSources.TraceLevel=High}"/>
                                                </vvp:Pane.Contains>
                                            </vvp:Pane>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </DataTemplate>
                    </ResourceDictionary>
                </vvp:Pane.Resources>
                <vvp:Pane.Contains>
                    <ContentPresenter Content="{Binding SelectedItem, Source={x:Reference Scheme}}">
                        <i:Interaction.Triggers>
                            <ei:PropertyChangedTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}, Path=Content}">
                                <ei:CallMethodAction MethodName="UpdateVals"></ei:CallMethodAction>
                            </ei:PropertyChangedTrigger>
                        </i:Interaction.Triggers>
                    </ContentPresenter>
                </vvp:Pane.Contains>
            </vvp:Pane>
        </Grid>

        <!--Console-->
        <vvp:Pane x:Name="Console" DataContext="{Binding MyConsole}" Grid.Column="1" Margin="0,5,0,5" Grid.Row="2" Label="{DynamicResource output}" Style="{DynamicResource Pane_Dark}">
            <vvp:Pane.Contains>
                <ListBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0" AlternationCount="500" ItemsSource="{Binding Messages}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White"/>
            </vvp:Pane.Contains>
        </vvp:Pane>

        <!--Work area-->
        <ScrollViewer Grid.Row="1" Grid.Column="1" HorizontalScrollBarVisibility="Visible">
            <i:Interaction.Behaviors>
                <behavior:ScrollViewerRightButtonScrollBehavior ScrollingCursor="ScrollAll"/>
            </i:Interaction.Behaviors>
            <SchemeControl:SchemeControl x:Name="Scheme" HorizontalAlignment="Left" VerticalAlignment="Top" DataContext="{Binding WorkArea, Mode=OneWay}" ItemsSource="{Binding Nodes}" Height="5000" Width="5000" ConnectionCreated="SchemeArea_ConnectionCreated" Connections="{Binding Connections, Mode=TwoWay, PresentationTraceSources.TraceLevel=High}">
                <i:Interaction.Behaviors>
                    <behavior:FrameworkElementDropBehavior/>
                </i:Interaction.Behaviors>
                <SchemeControl:SchemeControl.Background>
                    <VisualBrush TileMode="Tile" Viewport="0,0,24,24" ViewportUnits="Absolute"  Viewbox="0,0,24,24" ViewboxUnits="Absolute">
                        <VisualBrush.Visual>
                            <Rectangle Stroke="Darkgray" StrokeThickness="1" Height="25" Width="25" StrokeDashArray="2 2"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </SchemeControl:SchemeControl.Background>
                <SchemeControl:SchemeControl.Resources>
                    <DataTemplate DataType="{x:Type vm:ConnectionViewModel}">
                        <Line X1="{Binding Hotspot1.X}"
                              Y1="{Binding Hotspot1.Y}"
                              X2="{Binding Hotspot2.X}"
                              Y2="{Binding Hotspot2.Y}"
                              Stroke="Black" IsHitTestVisible="False"></Line>
                    </DataTemplate>
                </SchemeControl:SchemeControl.Resources>
                <SchemeControl:SchemeControl.NodeContainerStyle>
                    <Style TargetType="{x:Type SchemeControl:SchemeItem}">
                        <Setter Property="X" Value="{Binding Left}"/>
                        <Setter Property="Y" Value="{Binding Top}"/>
                    </Style>
                </SchemeControl:SchemeControl.NodeContainerStyle>
                <SchemeControl:SchemeControl.NodeTemplate>
                    <DataTemplate DataType="{x:Type vm:NodeViewModel}">
                        <SchemeControl:NodeControl InputsSource="{Binding InputPorts}"
							OutputsSource="{Binding OutputPorts}"
							Background="#E5555555">
                            <SchemeControl:NodeControl.Header>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Margin="2,0" Foreground="White" FontSize="12" Text="{Binding Name}" FontWeight="Bold"/>
                                    <TextBlock Margin="2,0"  Foreground="White" Text="{Binding NodeTypeName}" Grid.Row="1" FontSize="9" FontStyle="Italic"/>
                                    <CheckBox IsEnabled="False" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding IsUpToDate}">
                                        <CheckBox.Template>
                                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                                <Ellipse x:Name="ellipse" Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="Black"></Ellipse>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="ellipse" Property="Fill" Value="Green"></Setter>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter TargetName="ellipse" Property="Fill" Value="Yellow"></Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </CheckBox.Template>
                                    </CheckBox>
                                </Grid>
                            </SchemeControl:NodeControl.Header>
                            <SchemeControl:NodeControl.InputTemplate>
                                <DataTemplate DataType="{x:Type vm:InputPortViewModel}">
                                    <SchemeControl:PortControl Style="{DynamicResource InputBooleanPort}" Hotspot="{Binding Hotspot, Mode=TwoWay}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding PortName}"/>
                                            <ContentControl Visibility="{Binding IsNotConnected, Converter={StaticResource BoolToVis}}">
                                                <ContentControl.Resources>
                                                    <conv:StringToIntConverter x:Key="StrToInt"></conv:StringToIntConverter>
                                                </ContentControl.Resources>
                                                <ContentPresenter Content="{Binding Val, Mode=TwoWay, Converter={StaticResource StrToInt}}">
                                                    <ContentPresenter.Resources>
                                                        <ResourceDictionary>
                                                            <ResourceDictionary.MergedDictionaries>
                                                                <ResourceDictionary Source="Resources/styles/ValTypesEdit.xaml"/>
                                                            </ResourceDictionary.MergedDictionaries>
                                                        </ResourceDictionary>
                                                    </ContentPresenter.Resources>
                                                </ContentPresenter>
                                            </ContentControl>
                                        </StackPanel>
                                    </SchemeControl:PortControl>
                                </DataTemplate>
                            </SchemeControl:NodeControl.InputTemplate>
                            <SchemeControl:NodeControl.OutputTemplate>
                                <DataTemplate DataType="{x:Type vm:OutputPortViewModel}">
                                    <SchemeControl:PortControl Style="{DynamicResource OutputBooleanPort}" Hotspot="{Binding Hotspot, Mode=TwoWay}">
                                        <TextBlock Text="{Binding PortName}"/>
                                    </SchemeControl:PortControl>
                                </DataTemplate>
                            </SchemeControl:NodeControl.OutputTemplate>
                        </SchemeControl:NodeControl>
                    </DataTemplate>
                </SchemeControl:SchemeControl.NodeTemplate>
            </SchemeControl:SchemeControl>
        </ScrollViewer>
        <Menu Margin="0,0,0,2" VerticalAlignment="Top" Grid.ColumnSpan="3">
            <Button Content="{DynamicResource calculate}" Command="{Binding CalculateSchemeCommand}"/>
            <Button Content="{DynamicResource clear}" Command="{Binding ClearSchemeCommand}"/>
            <Button Content="{DynamicResource save}" Command="{Binding SaveSchemeCommand}" Click="Button_Click_1"/>
            <Button Content="{DynamicResource load}" Width="75" Click="Button_Click"/>
        </Menu>
    </Grid>
</Window>
