<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SchemeControlLib"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions">

    <BooleanToVisibilityConverter x:Key="BoolToVis"/>

    <Style TargetType="{x:Type local:PortControl}">
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="ParentSchemeControl" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SchemeControl}}, Path=. }"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PortControl}">
                    <ContentPresenter></ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:NodeControl}">
        <Setter Property="HeaderBackground">
            <Setter.Value>
                <RadialGradientBrush RadiusY="2" Center="0.1,0.1" GradientOrigin="0.2,0.3" RadiusX="1">
                    <GradientStop Color="#33000000" Offset="0.509"/>
                    <GradientStop Color="#FF5AC58A"/>
                    <GradientStop Color="#FF5AC58A" Offset="1"/>
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Gray"></SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NodeControl}">
                    <Border x:Name="PART_DragAnchor" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="True" IsHitTestVisible="True" Background="{TemplateBinding Background}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Grid ClipToBounds="True" HorizontalAlignment="Stretch" Margin="0"  Width="Auto" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Cursor="Hand" Background="{TemplateBinding HeaderBackground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="10,10,0,0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Margin="2" Content="{TemplateBinding Header}" />
                            </Border>
                            <Grid Grid.Row="1" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40*"/>
                                    <ColumnDefinition Width="60*"/>
                                    <ColumnDefinition Width="40*"/>
                                </Grid.ColumnDefinitions>
                                <!--Inputs-->
                                <ItemsControl ItemsSource="{TemplateBinding Inputs}" ItemTemplate="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NodeControl}}, Path=InputTemplate}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel></StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <!--Outputs-->
                                <ItemsControl Grid.Column="2" ItemsSource="{TemplateBinding Outputs}"  ItemTemplate="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NodeControl}}, Path=OutputTemplate}" >
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel></StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:SchemeControl}">
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SchemeControl}">
                    <Canvas Background="{TemplateBinding Background}" x:Name="PART_Canvas"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <!--Present nodes-->
                        <local:NodesControl x:Name="PART_SchemeItems" ItemsSource="{TemplateBinding ItemsSource}" 
                                            ItemTemplate="{TemplateBinding NodeTemplate}"
                                            ItemContainerStyle="{TemplateBinding NodeContainerStyle}" 
                                            SelectedItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SchemeControl}}, Path=SelectedItem}">
                        </local:NodesControl>
                        <!-- Present connections-->
                        <ContentPresenter Content="{TemplateBinding CurConnection}"></ContentPresenter>
                        <ItemsControl ItemsSource="{TemplateBinding Connections}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas></Canvas>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:NodesControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NodesControl">
                    <!-- 
                    The ListBoxItems are presented in a Canvas.
                    'IsItemsHost' is set to 'True' so that the ListBox
                    uses the Canvas as the container for its items.
                    -->
                    <Canvas
                        IsItemsHost="True" Background="{TemplateBinding Background}"
                        />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Scheme item style-->
    <Style TargetType="{x:Type local:SchemeItem}">
        <Setter Property="Canvas.Left" Value="{Binding RelativeSource={RelativeSource Self}, Path=X}"></Setter>
        <Setter Property="Canvas.Top" Value="{Binding RelativeSource={RelativeSource Self}, Path=Y}"></Setter>
        <Setter Property="ParentSchemeControl" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SchemeControl}}, Path=.}"></Setter>
        <Setter Property="Padding" Value="2"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SchemeItem}">
                    <Border x:Name="PART_DragAnchor" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="10">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Background" Value="#B2CBBE40"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:ConnectionControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ConnectionControl}">
                    <Line X1="{Binding Hotspot1.X, RelativeSource={RelativeSource TemplatedParent}}"
                          Y1="{Binding Hotspot1.Y, RelativeSource={RelativeSource TemplatedParent}}"
                          X2="{Binding Hotspot2.X, RelativeSource={RelativeSource TemplatedParent}}"
                          Y2="{Binding Hotspot2.Y, RelativeSource={RelativeSource TemplatedParent}}" Stroke="Black" IsHitTestVisible="False">
                    </Line>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
